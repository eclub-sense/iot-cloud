{
  "name": "calypso-level",
  "version": "0.5.0",
  "description": "A calypso driver for LevelUP-compatible data stores.",
  "main": "driver.js",
  "dependencies": {
    "caql-js-compiler": ">=0.1.0"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kevinswiber/calypso-level.git"
  },
  "keywords": [
    "calypso",
    "levelup",
    "leveldb",
    "caql",
    "query"
  ],
  "author": {
    "name": "Kevin Swiber",
    "email": "kswiber@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kevinswiber/calypso-level/issues"
  },
  "homepage": "https://github.com/kevinswiber/calypso-level",
  "readme": "# calypso-level\n\nA LevelDB driver for [calypso](https://github.com/kevinswiber/calypso).\n\n## Install\n\n`npm install calypso-level`\n\n## Example\n\nWith query language:\n\n```js\nvar calypso = require('calypso');\nvar level = require('levelup');\nvar LevelDriver = require('calypso-level');\nvar Query = calypso.Query;\n\nvar driver = LevelDriver.create({\n  collectionMap: {\n    'companies': level('./db')\n  }\n});\n\nvar engine = calypso.configure({\n  driver: driver\n});\n\nengine.build(function(err, connection) {\n  var session = connection.createSession();\n\n  var query = Query.of('companies')\n    .ql('SELECT name, founded_year, total_money_raised AS worth ' +\n        'WHERE founded_year >= @year AND name NOT LIKE @term ' +\n        'ORDER BY founded_year DESC, name')\n    .params({ year: 1999, term: '%air%' });\n\n  session.find(query, function(err, companies) {\n    console.log(companies);\n    connection.close();\n  });\n});\n```\n\nWith object mapping:\n\n```js\nvar calypso = require('calypso');\nvar level = require('levelup');\nvar LevelDriver = require('calypso-level');\nvar Query = calypso.Query;\n\nvar Company = function() {\n  this.name = null;\n  this.foundedYear = null;\n  this.worth = null;\n};\n\nvar mapping = function(config) {\n  config\n    .of(Company)\n    .at('companies')\n    .map('name')\n    .map('foundedYear', { to: 'founded_year' })\n    .map('worth', { to: 'total_money_raised' });\n};\n\nvar driver = LevelDriver.create({\n  collectionMap: {\n    'companies': level('./db')\n  }\n});\n\nvar engine = calypso.configure({\n  driver: driver,\n  mappings: [mapping]\n});\n\nengine.build(function(err, connection) {\n  var session = connection.createSession();\n\n  var query = Query.of(Company)\n    .where('foundedYear', { gte: 1999 })\n    .and('name', { not: { like: '%air' } })\n    .orderBy({ foundedYear: 'desc' }, 'name');\n\n  session.find(query, function(err, companies) {\n    console.log(companies);\n  });\n});\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "calypso-level@0.5.0",
  "_from": "calypso-level@^0.5.0"
}
