{
  "name": "revolt",
  "version": "0.7.0",
  "description": "A reactive, pipelined HTTP client.",
  "main": "revolt.js",
  "directories": {
    "example": "example"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "http",
    "rx",
    "reactive",
    "client"
  ],
  "author": {
    "name": "Kevin Swiber",
    "email": "kswiber@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/kevinswiber/revolt.git"
  },
  "bugs": {
    "url": "https://github.com/kevinswiber/revolt/issues"
  },
  "homepage": "https://github.com/kevinswiber/revolt",
  "dependencies": {
    "rx": "^2.3.18",
    "ws": "^0.5.0"
  },
  "readme": "# revolt\n\nA reactive, pipelined HTTP client.\n\n* Add common request/response pipeline handlers.\n* Use reactive programming to consume responses.\n\n## Install\n\n```\nnpm install revolt\n```\n\n## Example\n\n```js\nvar revolt = require('../revolt');\n\nvar client = revolt()\n  .use(function(handle) {\n    handle('request', function(pipeline) {\n      return pipeline.map(function(env) {\n        var auth = new Buffer('user:password').toString('base64');\n        env.request.headers['authorization'] = 'Basic ' + auth;\n\n        return env;\n      });\n    });\n  });\n\nclient\n  .get('http://localhost:8082')\n  .flatMap(function(env) {\n    return revolt.buffer(env.response)\n      .map(function(data) {\n        env.response.body = data.toString();\n        return env;\n      });\n  })\n  .subscribe(function(env) {\n    console.log(env.response.body);\n  });\n```\n",
  "readmeFilename": "README.md",
  "_id": "revolt@0.7.0",
  "_from": "revolt@^0.7.0"
}
